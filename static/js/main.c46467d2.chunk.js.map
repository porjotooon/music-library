{"version":3,"sources":["theme.js","global.js","components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","util.js","App.js","index.js"],"names":["lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","Song","currentSong","isPlaying","className","alt","name","src","cover","artist","Player","setSongs","setCurrentSong","songs","songInfo","setSongInfo","audioRef","setIsPlaying","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipSongHandler","direction","currentIndex","findIndex","length","currentTime","min","max","duration","value","type","onChange","e","current","target","onClick","size","icon","faAngleLeft","pause","play","faPause","faPlay","faAngleRight","Librarysongs","styled","div","SongDesc","LibrarySong","selectedSong","filter","playPromise","undefined","then","audio","DiLibrary","Library","libraryStatus","Nav","setLibraryStatus","faMusic","ChillHop","color","uuidv4","App","useState","setTheme","useRef","state","setState","data","timeUpdateHandler","Switch","checked","onTimeUpdate","ref","onLoadedMetadata","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c46467d2.chunk.js","sourcesContent":["\r\n\r\nexport const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n  }\r\n  \r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n  }\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    padding: 0;\r\n    margin: 0;\r\n    transition: all 0.25s linear;\r\n  }\r\n  footer {\r\n    position: absolute;\r\n    bottom: 5%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n  small {\r\n    display: block;\r\n  }\r\n  button {\r\n    display: block;\r\n    margin-left: 80%;\r\n  }\r\n`;","import React from 'react';\r\n\r\nconst Song = ({currentSong, isPlaying}) => {\r\n    return(\r\n        <div className='song-container'>\r\n            <img className={`${isPlaying} ? 'rotateSong' : ''`} alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Song;","import React, { useEffect }  from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({ setSongs, setCurrentSong, songs, songInfo, setSongInfo, audioRef, currentSong, isPlaying, setIsPlaying }) => {\r\n\r\n    useEffect(() => {\r\n        // Add active song\r\n        const newSongs = songs.map((song) => {\r\n        if(song.id === currentSong.id){ // just the \"id\" here represents the song we click on. song.id represents song from state\r\n            return{\r\n                ...song,\r\n                active: true,\r\n            }\r\n            } else {\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        });\r\n\r\n    setSongs(newSongs);\r\n    }, [currentSong])\r\n\r\n    // event handler\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause()\r\n            setIsPlaying(!isPlaying)\r\n        }else{\r\n            audioRef.current.play()\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n    //gotten from stackoverflow\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // handler for dragging\r\n    const dragHandler = e => {\r\n        audioRef.current.currentTime = e.target.value   /* MATCHES AND UPDATES THE AUDIO */\r\n        setSongInfo({...songInfo, currentTime: e.target.value}) // what this does is it follows it to \r\n                                                               // the point it's dragged to\r\n    }\r\n\r\n    const skipSongHandler = direction => {\r\n        let currentIndex = songs.findIndex(song => song.id === currentSong.id)\r\n        if(direction === 'skip-forward'){\r\n            setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n        }\r\n        if(direction === 'skip-back'){\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                setCurrentSong(songs[songs.length - 1])\r\n                return;\r\n            }\r\n            setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='player'>\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <input \r\n                    min={0} \r\n                    max={songInfo.duration || 0} \r\n                    value={songInfo.currentTime} \r\n                    type=\"range\" \r\n                    onChange={dragHandler}\r\n                />\r\n                <p>{getTime(songInfo.duration)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon \r\n                    onClick={() => skipSongHandler('skip-back')} \r\n                    className='skip-back' \r\n                    size=\"2x\" \r\n                    icon={faAngleLeft}\r\n                />\r\n                <FontAwesomeIcon \r\n                    onClick={playSongHandler}  \r\n                    className='play' \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause: faPlay}\r\n                />\r\n                <FontAwesomeIcon \r\n                    onClick={() => skipSongHandler('skip-forward')}\r\n                    className='skip-forward' \r\n                    size=\"2x\" \r\n                    icon={faAngleRight}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}; // comment\r\n\r\nexport default Player;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport '../styles/app.scss'\r\n\r\nconst Librarysongs = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    padding: 1rem 2rem 1rem 2rem;\r\n    cursor: pointer;\r\n    img{\r\n        width: 30%;\r\n    }\r\n    &:hover{\r\n        background:rgba(222,235,280,0.75);\r\n    }\r\n`\r\nconst SongDesc = styled.div`\r\n    padding-left: 1rem;\r\n    h3{\r\n        font-size: 1rem\r\n    }\r\n    h4{\r\n        font-size: 0.7rem;\r\n    }\r\n`\r\n\r\n\r\nconst LibrarySong = ({ setSongs, isPlaying, audioRef, song, songs, setCurrentSong, id }) => {\r\n    const songSelectHandler = () => {\r\n        const selectedSong = songs.filter(song => song.id === id)\r\n        setCurrentSong(selectedSong[0]) // this is done so because the selected songs is returned as an array\r\n\r\n        // Add active song\r\n        const newSongs = songs.map(song => {\r\n            if(song.id === id){ // just the \"id\" here represents the song we click on. song.id represents song from state\r\n                return{\r\n                    ...song,\r\n                    active: true,\r\n                }\r\n            } else {\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        })\r\n\r\n        setSongs(newSongs)\r\n\r\n        //check if song is playing\r\n        if(isPlaying){\r\n            const playPromise = audioRef.current.play()\r\n            if(playPromise !== undefined){\r\n                playPromise.then(audio => audioRef.current.play())\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <Librarysongs onClick={songSelectHandler} className={`${song.active ? \"selected\" : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <SongDesc>\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </SongDesc>\r\n        </Librarysongs>\r\n    )\r\n};\r\n\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\nimport styled from 'styled-components'\r\n\r\nconst DiLibrary = styled.div`\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width:20rem;\r\n    height:100%;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    box-shadow: 2px 2px 50px rgb(204,204,204); \r\n    overflow: scroll;\r\n    h2{\r\n        padding: 2rem;\r\n    }\r\n`\r\n\r\n\r\nconst Library = ({ libraryStatus, setSongs, isPlaying, audioRef, songs, setCurrentSong }) => {\r\n    return(\r\n        <DiLibrary className={`${libraryStatus ? 'active-library' : \"library\"}`}>\r\n            <h2>Library</h2>\r\n            <div>\r\n                {songs.map(song => \r\n                    <LibrarySong\r\n                        songs={songs} \r\n                        setCurrentSong={setCurrentSong} \r\n                        song={song}\r\n                        id={song.id}\r\n                        key={song.id}\r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                        setSongs={setSongs}\r\n                    />)}\r\n            </div>\r\n        </DiLibrary>\r\n    )\r\n}\r\n\r\nexport default Library","import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n    return(\r\n        <nav>\r\n            <h1>Wooosh</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// loaded all music data and \r\n// covers into an array\r\nfunction ChillHop() {\r\n    return [\r\n        {\r\n            name: \"Hidden Structure\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\r\n            artist: \"Leavy, Flitz&Suppe\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9913\",\r\n            color: [\"#205950\",\"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Flushing the Stairs\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/6defa6c89a6902fdd84bccd720c2b8fd29c40990-1024x1024.jpg\",\r\n            artist: \"Leavy\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9917\",\r\n            color: [\"#EF8EA9\",\"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Maple Leaf Pt.2\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n            artist: \"Philanthrope\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10243\",\r\n            color: [\"#CD607D\",\"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Faces\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/c50f86fb7696e5c5747e0fa2ada4fcbc2501fea7-1024x1024.jpg\",\r\n            artist: \"Knowmadic\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8554\",\r\n            color: [\"#EF8EA9\",\"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Slopes\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/52bd092974ccce9aa610c33f03575fc2d7f9c7d2-1024x1024.jpg\",\r\n            artist: \"Philanthrope, Yasper\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8044\",\r\n            color: [\"#CD607D\",\"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"this again..\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/f3dda653e5ff94d787639ef56cb8e922d321a04f-1024x1024.jpg\",\r\n            artist: \"SwuM, quickly, quickly\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8953\",\r\n            color: [\"#205950\",\"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Lemon\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/53eef8b1ac9bf40038b2b5dc7ca2d13fc19cf95e-1024x1024.jpg\",\r\n            artist: \"Tom Doolie\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7977\",\r\n            color: [\"#205950\",\"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"False Hope\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n            artist: \"Nymano, Pandrezz\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10148\",\r\n            color: [\"#CD607D\",\"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n    ]\r\n};\r\n\r\nexport default ChillHop;","import React, { useState, useRef } from 'react';\nimport Switch from '@material-ui/core/Switch';\n\n// for light & dark theme\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global'\n\n// components\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport Library from './components/Library'\nimport Nav from './components/Nav'\nimport './styles/app.scss'\n\n// music data\nimport data from './util';\n\n\nfunction App() {\n  const [theme, setTheme] = useState('dark');\n\n  // useReference\n  const audioRef = useRef(null)\n\n  // state for Switch\n  const [state, setState] = useState(true)\n\n  const toggleTheme = () => {\n    if(theme === 'light'){\n      setTheme('dark')\n      setState(true)\n    } else {\n      setTheme('light')\n      setState(false)\n    }\n  }\n\n  // this state used to store list of songs\n  const [songs, setSongs] = useState(data())\n\n  // this state used to show current song item\n  const [currentSong, setCurrentSong] = useState(songs[0])\n\n  //playing state\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  // state for considering time\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0, //default value aren't known\n  })\n\n  // state for opening library\n  const [libraryStatus, setLibraryStatus] = useState(false)\n\n  //we used the special \"onChange\" like event from \n  //the audio tag, where we are now using that event\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration})\n}\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles/>\n        <Switch checked={state} onChange={toggleTheme} className=\"switch\"/>\n        <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n        <div className=\"App\">\n          <Song currentSong={currentSong} isPlaying={isPlaying}/>\n          <Player\n            setSongInfo={setSongInfo}\n            songInfo={songInfo}\n            audioRef={audioRef}\n            setIsPlaying={setIsPlaying}\n            isPlaying={isPlaying} \n            currentSong={currentSong}\n            songs={songs}\n            setSongs={setSongs}\n            setCurrentSong={setCurrentSong}\n          />\n          <Library \n            songs={songs} \n            setCurrentSong={setCurrentSong}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n            libraryStatus={libraryStatus}\n          />\n          <audio \n                onTimeUpdate={timeUpdateHandler} \n                ref={audioRef} \n                src={currentSong.audio}\n                onLoadedMetadata={timeUpdateHandler}\n            >\n            </audio>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}